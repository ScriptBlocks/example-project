name: Build Python Project with PyInstaller

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Clone ScriptBlocks repository
      run: |
        git clone https://github.com/ScriptBlocks/ScriptBlocks.py.git
        cd ScriptBlocks.py
        python setup.py install

    - name: Install additional dependencies
      run: |
        poetry install

    - name: Build executable
      run: |
        mkdir -p build/${{ runner.os }}
        if [ $RUNNER_OS == 'Windows' ]; then
          pyinstaller --distpath build/windows --noconsole main.py
        elif [ $RUNNER_OS == 'Linux' ]; then
          pyinstaller --distpath build/linux main.py
        elif [ $RUNNER_OS == 'macOS' ]; then
          pyinstaller --distpath build/macos main.py
        fi
      shell: bash

    - name: List build directory
      run: ls -la build/${{ runner.os }}
      shell: bash

    - name: Upload artifacts
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: linux-executable
        path: build/linux/

    - name: Upload artifacts
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: windows-executable
        path: build/windows/

    - name: Upload artifacts
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: macos-executable
        path: build/macos/